@{
	ViewBag.Title = "Totale Arretrati";
	Layout = "~/Views/Shared/_LayoutContainer.cshtml";

	var cls = string.Empty;
	if (Model.btnConfermaTotaliVisible && Model.btnDettaglioVisibile)
	{
		cls = "col-4";
	}
	else if (Model.btnConfermaTotaliVisible || Model.btnDettaglioVisibile)
	{
		cls = "col-6";
	}
	else
	{
		cls = "col-12";
	}
}

@using TFI.BLL.Utilities.PagoPa
@model  TFI.OCM.AziendaConsulente.TotaleArretrati

@section showMessage{
    @{Html.RenderPartial("PartialViewShowMessages");}
}

@section JS{
    <script>
        function GetBtnType(value) {
            debugger;
            $("#btnType").prop("value", value);
        }
        /* openRepARR('" + strFileName.Replace("\", "/") + "', '')*/
        function checkLength() {
            if (event.keyCode != 8 && event.keyCode != 46 && document.getElementById("txtNote").value.length > 500) {
                alert("La lunghezza massima delle note e\' di 500 caratteri!");
                document.getElementById("txtNote").value = document.getElementById("txtNote").value.substring(0, 500);
                document.getElementById("txtNote").focus();
                return false;
            }
            else { return true; }
        }

        function validatePage() {
            if (Page_ClientValidate() && isChecked()) {
                if (confirm('Confermi operazione?')) { return true; }
                else {
                    event.preventDefault(); //.returnValue = null;
                    return false;
                }
            }
            else {
                event.preventDefault(); //.returnValue = null;
                return false;
            }
        }

        function getConfirm() {
            if (document.getElementById("txtNote").value.length <= 500) {
                if (confirm("Confermi operazione?") == true) { return true; }
                else {
                    event.preventDefault(); //.returnValue = null;
                    return false;
                }
            }
            else {
                alert("La lunghezza massima delle note e\' di 500 caratteri!");
                document.getElementById("txtNote").focus();
                event.preventDefault(); //.returnValue = null;
                return false;
            }
        }

        function isChecked() {
            var result = false;

            for (var kk = 1; kk < 7; kk++) {
                if (document.getElementById("chk" + kk).checked == true) {
                    result = true;
                    break;
                }
            }

            if (document.getElementById('txtDataVersamento').value != "" && document.getElementById('txtImportoVersato').value != "") {
                if (result == false) {
                    alert("Selezionare un\'opzione di pagamento!");
                    event.preventDefault(); //.returnValue = null;
                    return false;
                }
                else { return result; }
            }
            //else
            //{return result;}

            if (document.getElementById("chk3").checked == true) {
                Filtro = /^(IT[0-9]{2}[a-zA-Z]{1}[0-9]{5}[0-9]{5}[a-zA-Z_0-9]{12})$/;

                var iban = document.getElementById("txtIBAN").value;

                if (iban != "") {
                    if (Filtro.test(iban)) { return result; }
                    else {
                        alert("Inserire un codice IBAN valido!");
                        document.getElementById("txtIBAN").focus();
                        event.preventDefault(); //.returnValue = null;
                        return false;
                    }
                }
            }
            { return result; }

        }

        function check() {
            for (var kk = 1; kk <= 6; kk++) {
                if (event.srcElement.id != 'chk' + kk) { document.getElementById('chk' + kk).checked = false; }
            }
            //---------------------------------------------------------------------
            document.getElementById('txtIBAN').disabled = true;
            //---------------------------------------------------------------------
            document.getElementById('rfvIBAN').setAttribute('enabled', false);
            //---------------------------------------------------------------------
            document.getElementById("btnMav").style.display = "none";
            if (document.getElementById("btnFileMav") != null) { document.getElementById("btnFileMav").style.display = "none"; }

            if (event.srcElement.checked == true) {
                if (event.srcElement.id == 'chk1') {
                    document.getElementById('txtDataVersamento').disabled = true;
                    document.getElementById('txtDataVersamento').value = "";
                    document.getElementById('txtImportoVersato').disabled = true;
                    document.getElementById('txtImportoVersato').value = "0,00";
                    //---------------------------------------------------------
                    document.getElementById('txtCittaUffPostale').value = '';
                    document.getElementById('txtProvUffPostale').value = '';
                    document.getElementById('txtUffPostale').value = '';
                    document.getElementById('txtIBAN').value = '';
                    //--------------------------------------------------------
                    document.getElementById("btnMav").style.display = "block";
                    if (document.getElementById("btnFileMav") != null) { document.getElementById("btnFileMav").style.display = "block"; }
                }
                else {
                    document.getElementById("btnMav").style.display = "none";
                    if (document.getElementById("btnFileMav") != null) { document.getElementById("btnFileMav").style.display = "none"; }
                }

                if (event.srcElement.id == 'chk2') {
                    document.getElementById('txtUffPostale').disabled = false;
                    document.getElementById('txtCittaUffPostale').disabled = false;
                    document.getElementById('txtProvUffPostale').disabled = false;

                    document.getElementById('rfvUffPostale').setAttribute('enabled', true);
                    document.getElementById('rfvCittaUffPostale').setAttribute('enabled', true);
                    document.getElementById('rfvProvUffPostale').setAttribute('enabled', true);
                }
                else {
                    document.getElementById('txtCittaUffPostale').value = '';
                    document.getElementById('txtUffPostale').value = '';
                    document.getElementById('txtProvUffPostale').value = '';
                }

                if (event.srcElement.id == 'chk3') {
                    document.getElementById('txtIBAN').disabled = false;
                    document.getElementById('txtIBAN').value = document.getElementById('hdnIBAN').value;
                    document.getElementById('rfvIBAN').setAttribute('enabled', true);
                }
                else {
                    document.getElementById('txtIBAN').value = '';
                }

                if (event.srcElement.id == 'chk4' || event.srcElement.id == 'chk5' || event.srcElement.id == 'chk6') {
                    document.getElementById('txtDataVersamento').disabled = true;
                    document.getElementById('txtDataVersamento').value = "";
                    document.getElementById('txtImportoVersato').disabled = true;
                    document.getElementById('txtImportoVersato').value = "0,00";

                    document.getElementById('rfvData').setAttribute('enabled', false);
                    document.getElementById('rfvImporto').setAttribute('enabled', false);
                    document.getElementById('rvImporto').setAttribute('enabled', false);
                }
                else {
                    if (event.srcElement.id != 'chk1') {
                        document.getElementById('txtDataVersamento').disabled = false;
                        document.getElementById('txtImportoVersato').disabled = false;

                        document.getElementById('rfvData').setAttribute('enabled', true);
                        document.getElementById('rfvImporto').setAttribute('enabled', true);
                        document.getElementById('rvImporto').setAttribute('enabled', true);
                    }
                }
            }
        }

        function openMav() {
            event.preventDefault(); //.returnValue = null;
            var url = "../Mav/frameMav.aspx?annden=" + document.getElementById("hdnAnno").value + "&mesden=" + document.getElementById("hdnMese").value + "&proden=" + document.getElementById("hdnProden").value;
            ret = showModalWindow(url, "window", 800, 600, "status=no;help=no;unadorned=yes;scroll=yes;toolbar=no;");
            if (ret == "ok") {
                document.getElementById("hdnMav").value = ret;
                document.forms[0].submit();
            }
        }

        function printMav() {
            event.preventDefault(); //.returnValue = null;
            var url = "../StampePDF/Stampa.aspx?annden=" + document.getElementById("hdnAnno").value + "&mesden=" + document.getElementById("hdnMese").value + "&proden=" + document.getElementById("hdnProDen").value + "&tipmov=MAV";
            ret = window.open(url, 'stampa_Mav', 'top=1,left=1,height=600,width=800,copyhistory=no,status=yes,toolbar=no,menubar=no,resizable=yes,location=no,scrollbars=yes');
        }

        function openReport() {
            var blnSanzione = false;
            if (parseFloat(document.getElementById("lblTotSanzione").innerText.replace(".", "").replace(",", ".")) > 0) {
                if (confirm("Si desidera stampare anche i dati della sanzione?") == true) { blnSanzione = true; }
            }
            var report_url = "../StampePDF/Stampa.aspx?codpos=" + /* "<%=Session("strcodpos")%>"*/ + "&annden=" + document.getElementById("hdnAnno").value + "&mesden=" + document.getElementById("hdnMese").value + "&proden=" + document.getElementById("hdnProden").value + "&tipmov=AR";
            window.open(report_url, 'stampa', 'top=1,left=1,height=600,width=800,copyhistory=no,status=yes,toolbar=no,menubar=no,resizable=yes,location=no,scrollbars=yes');
            if (blnSanzione == true) {
                var report_url = "../StampePDF/Stampa.aspx?codpos=" + /*"<%=Session("strcodpos")%>" +*/ "&annden=" + document.getElementById("hdnAnno").value + "&mesden=" + document.getElementById("hdnMese").value + "&proden=" + document.getElementById("hdnProden").value + "&tipmov=SA";
                window.open(report_url, 'stampa_sanzione', 'top=60,left=60,height=600,width=800,copyhistory=no,status=yes,toolbar=no,menubar=no,resizable=yes,location=no,scrollbars=yes');
            }
        }

        function openReportRicevuta(url, valori) {
            if (url != "") {
                var report_url = "../StampePDF/Stampa.aspx?strFileStampa=" + url;
                window.open(report_url, 'report', 'top=60,left=60,height=600,width=800,copyhistory=no,status=yes,toolbar=no,menubar=no,resizable=yes,location=no,scrollbars=yes');

            }
            else {
                var report_url_stream = "../StampePDF/Stampa.aspx?" + valori;
                window.open(report_url_stream, 'report', 'top=60,left=60,height=600,width=800,copyhistory=no,status=yes,toolbar=no,menubar=no,resizable=yes,location=no,scrollbars=yes');
            }
        }

        function openRepARR(url) {
            var report_url = "../StampePDF/Stampa.aspx?strFileStampa=" + url;
            window.open(report_url, 'report', 'top=60,left=60,height=600,width=800,copyhistory=no,status=yes,toolbar=no,menubar=no,resizable=yes,location=no,scrollbars=yes');
        }

        function GetBtnType(value) {
            $("#btnType").prop("value", value);
        }
    </script>
}

<div id="AbilitaVersamento" hidden>@Model.strStaDen2</div>
<div class="container-fluid">
<div class="card card-default" id="insDenArr">
<div style="background-color: #0c773c" class="card-header">
	<h3 style="color:white;text-align:center;width:100%;font-size:25px" class="card-title">
		Totali Denuncia Arretrato
	</h3>
</div>
<div class="card-body">
<section id="datiDenuncia">
	<div class="row">
		@using (Html.BeginForm("TotaleArretrati", "AziendaConsulente", FormMethod.Post, new { id = "formArretrati", style = "width:100%" }))
		{
						@*<div class="overlayElaborazioneInCorso" style="display:none">
						<div><img alt="Caricamento in corso..." class="imgLoading" src="/img/loading.gif" /></div>
						<div runat="server" class="msgElaborazioneSalvataggio" id="msgElaborazioneSalvataggio">Attendere la fine dell'elaborazione</div>
					</div>*@
			<input id="hdnIBAN" class="smallsizef" size="3" type="hidden" name="Hidden1" />
			<input class="smallsizef" id="hdnFLGRIC" type="hidden" size="1" name="hdnFLGRIC" />
			<input id="hdnRic" class="smallsizef" value="0" size="3" type="hidden" name="hdnRic" />
			<input id="hdnTipMov" size="1" type="hidden" name="Hidden1" />
			<input id="hdnMav" class="smallsizef" size="3" type="hidden" name="Hidden1/">
			<input id="hdnAnno" class="smallsizef" size="3" type="hidden" name="Hidden1" />
			<input id="hdnProt" class="smallsizef" size="3" type="hidden" name="hdnProt" />
			<input id="hdnMese" class="smallsizef" size="3" type="hidden" name="Hidden1" />
			<input id="hdnProden" class="smallsizef" size="3" type="hidden" name="Hidden1" />
			<input id="hdnQueryString" class="smallsizef" size="3" type="hidden" name="Hidden1" />

			<div class="card row">
				<table id="Table1">
					@if (!String.IsNullOrEmpty(Model.anncom))
					{
						<tr>
							<td class="col-2">@Html.Label("Anno Competenza", new { style = "margin-left:5px" })</td>
							<td>@Html.Label(Model.anncom)</td>
						</tr>
					}
					<tr>
						<td class="col-2">@Html.Label("Data Denuncia", new { id = "Label3", style = "margin-left:5px" })</td>
						@if (!String.IsNullOrEmpty(Model.lblDataDenuncia))
						{
							<td>@Html.Label(Model.lblDataDenuncia, new { id = "lblDataDenuncia" })</td>
						}

						@if (Model.lblDataErogazioneVisible)
						{
							<td style="width:10%">@Html.Label("Data Erogazione", new { id = "Label8" })</td>
							<td>@Html.Label("", new { id = "lblDataErogazione" }) </td>
						}
					</tr>
				</table>
			</div>
			<div class="row" style="margin-top:40px">
				<table id="tbTotali" >
					<tbody>
					<tr>
						<td class="col-2">@Html.Label("Contributi dovuti €")</td>
						<td class="col-2">@Html.TextBox("contributiDovuti", Model.lblContributi, new { @readonly = "readonly" })</td>
					</tr>
					<tr>
						<td class="col-2">@Html.Label(Model.Label5)</td>
						<td class="col-2">@Html.TextBox("addizionale", Model.lblAddizionale, new { @readonly = "readonly" })</td>
						<td class="col-2"></td>
						<td class="col-2 text-right">
							@if (Model.btnCreditiVisible)
							{
								@Html.Label("Crediti")
							}
						</td>
						<td class="col-2">
							@if (Model.btnCreditiVisible)
							{
								<input type="text" id="insert-crediti" class="numbeonly"/>
								@* <input type="text" id="txtCrediti" name="txtCrediti" value="@Model.txtCrediti" class="numberonly" /> *@
								@* <div style="display:none" id="txtCrediti_readonly">@Model.txtCreditiReadonly</div> *@
								@* <input type="text" id="decurtato" value="@Model.lblDecurtato" style="display:none" /> *@
							}
						</td>
						<td class="col-2">
							@if (Model.btnCreditiVisible)
							{
								<button type="button" id="btn_decurtaCredito" class="btn_official">Decurta Credito</button>
							}
						</td>
						<td class="col-2"></td>
					</tr>
					<tr>
						<td class="col-2">@Html.Label("Totale Contributi €", new { id = "Label4" })</td>
						<td class="col-2">@Html.TextBox("totContributi", Model.lblTotContributi, new { @readonly = "readonly" })</td>
					</tr>
					<tr>
						<td class="col-2">@Html.Label("Totale Dovuto €", new { @id = "Label9" })</td>
						<td class="col-2">@Html.TextBox("totDovuto", Model.lblTotDovuto, new { @readonly = "readonly", id = "lblTotDovuto" })</td>
					</tr>
					<tr>
						@if (Model.tbTotaliRows5Visible)
						{
							<td class="col-2">@Html.Label("Sanzioni €", new { @id = "Label12" })</td>
							<td class="col-2">@Html.TextBox("sanzioni", Model.lblTotSanzione, new { @readonly = "readonly" })</td>
						}
					</tr>
					<tr>
						<td class="col-2">@Html.Label("Credito apllicato €")</td>
						<td class="col-2">@Html.TextBox("txtCrediti", Model.txtCrediti, new { @readonly = "readonly"})</td>
					</tr>
					<tr>
						<td class="col-2">
							@if (Model.lblTotaleVisibile)
							{
								@Html.Label("Totale da Pagare €")
							}
						</td>
						<td class="col-2">
							@if (Model.lblTotPagareVisibile)
							{
								@Html.TextBox("lblTotPagare", Model.lblTotPagare, new { id = "totPagare", @readonly = "lblTotPagare" })
							}
						</td>
						@*<td style="PADDING-LEFT: 4px; HEIGHT: 18px" height="18" width="100"><asp:label id="lblTotale" runat="server" CssClass="smallsizef">Totale da Pagare €</asp:label></td>
										<td style="HEIGHT: 18px" height="18" width="90"><asp:label id="lblTotPagare" style="display: inline-block;width:110px" runat="server" CssClass="readonlycur" Font-Bold="True" Width="100px"></asp:label>
										<asp:label style="DISPLAY: none" id="lblDecurtato" runat="server">Label</asp:label>
										<asp:label style="DISPLAY: none" id="lbltotpag" runat="server">Label</asp:label></td>*@
					</tr>
					<tbody>
				</table>
				@* <div class="row col-lg-8"> *@
				@* 	<table id="Table5"> *@
				@* 		<tr> *@
				@* 			<td> *@
				@* 				@if (Model.lblCreditiVisibile) *@
				@* 				{ *@
				@* 					@Html.Label("Crediti") *@
				@* 				} *@
				@* 			</td> *@
				@* 			<td> *@
				@* 				@if (Model.lblCreditiVisibile) *@
				@* 				{ *@
				@* 					<input type="text" id="txtCrediti" name="txtCrediti" value="@Model.txtCrediti" class="numberonly" style="margin-left: 10px" /> *@
				@* 					<div style="display:none" id="txtCrediti_readonly">@Model.txtCreditiReadonly</div> *@
				@* 					<input type="text" id="decurtato" value="@Model.lblDecurtato" style="display:none" /> *@
				@* 				} *@
				@* 			</td> *@
				@* 			<td> *@
				@* 				@if (Model.btnDettaglioVisibile) *@
				@* 				{ *@
				@* 					<button type="button" id="btn_decurtaCredito" class="btn btn-block btn-outline-success " style="width: 100%; margin-left:10%;">Decurta Credito</button> *@
				@* 				} *@
				@* 			</td> *@
				@* 		</tr> *@
				@* 	</table> *@
				@* 	$1$ <div class="row" style="margin-top:40px"> #1# *@
				@* 	$1$ 	<div class="col-lg-1"> #1# *@
				@* 	$1$ 		@Html.Label("Note") #1# *@
				@* 	$1$ 	</div> #1# *@
				@* 	$1$ 	<div class="col-lg-11"> #1# *@
				@* 	$1$ 		@Html.TextArea("TEXTAREA1", new { @id = "txtNote", style = "width:600px; height:150px;margin-left:5px" }) #1# *@
				@* 	$1$ 		<div style="display:none" id="txtNote_readonly">@Model.txtNoteReadonly</div> #1# *@
				@* 	$1$ 	</div> #1# *@
				@* 	$1$ </div> #1# *@
				@* </div> *@
			</div>
			<div class="row" id="cont_btnTotali">
				@* <div class="col-12"> *@
				@* <div class="input-group d-flex"> *@
				<div class="col-4">
					@if (Model.btnConfermaTotaliVisible)
					{
						<button type="submit" value="SALVA_TOTALI" class="btn_official" id="btnConfermaTotali" name="btnType">Conferma Dati ad Enpaia</button>
					}
				</div>
				<div class="col-4">
					@if (Model.btnDettaglioVisibile)
					{
						@Html.ActionLink("Dettaglio Arretrato", "ConsultazioneArretrati", "AziendaConsulente", new { anno = Model.hdnAnno, mese = Model.hdnMese, parm = Model.parm, staDen = Model.strStaDen, mat = Model.mat, proDen = Model.hdnProden, anncom = Model.anncom, ricerca = true}, new { @class = "btn_official" })
					}
				</div>
				<div class="col-4">
					<button type="submit" value="CHIUDI" name="btnType" id="btnChiudi" class="btn_official">Chiudi</button>
				</div>
				@* </div> *@
				@* </div> *@
			</div>
			@Html.Hidden("hdnAnno", Model.hdnAnno)
			@Html.Hidden("hdnMese", Model.hdnMese)
			@Html.Hidden("hdnProden", Model.hdnProden)
			@Html.Hidden("ricerca", Model.isRicerca)
			@Html.Hidden("btnConfermaTotaliVisible", Model.btnConfermaTotaliVisible)
			@Html.Hidden("mat", Model.mat)
			@Html.Hidden("staDen", Model.staDen)
			@Html.Hidden("anncom", Model.anncom)
			@Html.Hidden("parm", Model.parm)
		}
	</div>
</section>

@if (Model.tbPagamentoVisibile)
{
	if (Model.tbIntestazionePagamentoVisibile)
	{
		<div class="row">
			<div class="col-12">
				<div class="card">
					<table id="tbIntestazionePagamento">
						<tr>
							<td>
								@Html.Label("Estremi di Pagamento")
							</td>
						</tr>
					</table>
				</div>
			</div>
		</div>
		<input id="flagLoad" class="smallsizef" size="3" type="hidden" name="flagLoad" value="1" />
	}

	<section id="tbIntestazionePagamento">
		<div class="row">
			<div class="col-12">
				<table id="tbPagamento">
					<tbody>
					<tr>
						<td style="margin-left:3px">@Html.Label("Data Operazione")</td>
						<td>@Html.TextBox("dataVersamento", Model.txtDataVersamento, new { id = "txtDataVersamento" })</td>
						<td></td>
						<td>@Html.Label("Importo del Versamento")</td>
						<td>@Html.TextBox("importoVersato", Model.txtImportoVersato, new { id = "txtImportoVersato", @readonly = "readonly" })</td>
					</tr>
				</table>
			</div>
		</div>
		<div class="row" id="cont_btnPagamento">
			<div class="col-6 d-flex">
				@if (Model.StatoPagamentoPagoPa == StatoPagoPa.OK)
				{
					<div class="col-12 text-bold">
						<p> Il Pagamento con PagoPa per il mese selezionato risulta effettuato.</p>
					</div>
				}
				@if (Model.StatoPagamentoPagoPa == StatoPagoPa.KO)
				{
					<div class="col-12 text-bold">
						<p>Il Pagamento per PagoPa il mese selezionato risulta in attesa di esito.</p>
					</div>
				}
				@if (Model.StatoPagamentoPagoPa == StatoPagoPa.ERR || Model.StatoPagamentoPagoPa == StatoPagoPa.ALT || Model.StatoPagamentoPagoPa == StatoPagoPa.ALTRO)
				{
					<div class="col-6">
						<a type="button" class="btn_official" href="@Url.Action("PagaOnLinePagoPA", new { iuvCode = Model.IuvCode, tranActionId = Model.TransActionId })">Paga Online</a>
					</div>
				}
				@if (Model.StatoPagamentoPagoPa == StatoPagoPa.DACREARE)
				{
					<div class="col-6">
						<a type="button" class="btn_official" href="@Url.Action("CreaPagamentoPa", new { anno = Model.hdnAnno, mese = Model.hdnMese, progressivo = Model.hdnProden, tipMov = Model.hdnTipMov })">Crea Pagamento PagoPA</a>
					</div>
				}
				@if (Model.StatoPagamentoPagoPa == StatoPagoPa.ERR || Model.StatoPagamentoPagoPa == StatoPagoPa.ALT || Model.StatoPagamentoPagoPa == StatoPagoPa.ALTRO)
				{
					<div class="col-6">
						<a type="button" class="btn_official" href="@Url.Action("StampaBollettino", new { anno = Model.hdnAnno, mese = Model.hdnMese, progressivo = Model.hdnProden, tranActionId = Model.TransActionId, iuvCode = Model.IuvCode })">Stampa Bollettino</a>
					</div>
				}
			</div>
			<div class="col-6 d-flex">
			<div class="col-6">
				@Html.ActionLink("Stampa Arretrato", "StampaArretrati", "AziendaConsulente",
					new { anno = Model.hdnAnno, mese = Model.hdnMese, proDen = Model.hdnProden, parm = Model.parm, staDen = "A", mat = Model.mat, annCom = Model.anncom },
					new { @class = "btn_official" })
			</div>
				<div class="col-6">
					@if (Model.btnStampaRicevutaVisible)
					{
						@Html.ActionLink("Stampa Ricevuta", "StampaRicevutaArretrato", "AziendaConsulente",
							new {anno = Model.hdnAnno, mese = Model.hdnMese, proDen = Model.hdnProden, parm = Model.parm, staDen = Model.staDen, mat = Model.mat, annCom = Model.anncom},
							new {@class = "btn_official"});
					}
				</div>
			</div>
		</div>
	</section>
}
</div>
</div>
</div>

<script>
	$(document).ready(() => {
		const txtCrediti = $('#txtCrediti');
		const insertCrediti = $('#insert-crediti') 
		insertCrediti.val(txtCrediti.val())
		$("#btn_decurtaCredito").click(function () {
			DecurtaCredito();
		});
		
		function DecurtaCredito() {
            let totPagare;
            let importoCrediti = parseFloat(insertCrediti.val().replace(',', '.')).toFixed(2);
            let totDovuto = parseFloat($("#lblTotDovuto").val().replace(',', '.')).toFixed(2);
        
            if (parseFloat(importoCrediti) <= parseFloat(totDovuto)) {
                totDovuto = parseFloat(totDovuto) - parseFloat(importoCrediti);
                totPagare = totDovuto;
                importoCrediti = importoCrediti.toString().replace('.', ',');
                txtCrediti.val(importoCrediti);
            }
            else {
                totPagare = parseFloat("0");
                importoCrediti = totDovuto.toString().replace('.', ',');
                insertCrediti.val(importoCrediti);
                txtCrediti.val(importoCrediti);
            }
        
            totPagare = totPagare.toFixed(2);
            totPagare = totPagare.toString().replace('.', ',');
            $("#totPagare").val(totPagare);
        }
	});
</script>